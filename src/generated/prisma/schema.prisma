generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  USER
  BARBER
  ADMIN
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Cliente
  appointmentsAsUser Appointment[] @relation("UserAppointments")

  // Barbeiro
  appointmentsAsBarber Appointment[] @relation("BarberAppointments")

  // Barbeiro: serviços oferecidos
  services Service[] @relation("BarberServices")
}

model Service {
  id        String   @id @default(uuid())
  name      String
  price     Float
  duration  Int // duração em minutos
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  barberId String
  barber   User   @relation("BarberServices", fields: [barberId], references: [id])

  appointments Appointment[]
}

model Appointment {
  id     String            @id @default(uuid())
  date   DateTime
  status AppointmentStatus @default(PENDING)

  userId String
  user   User   @relation("UserAppointments", fields: [userId], references: [id])

  barberId String
  barber   User   @relation("BarberAppointments", fields: [barberId], references: [id])

  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])

  createdAt DateTime @default(now())
}
